<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnStartRecording" xml:space="preserve">
    <value>Start recording</value>
  </data>
  <data name="btnStopRecording" xml:space="preserve">
    <value>Stop recording</value>
  </data>
  <data name="CurrentPositionLabel" xml:space="preserve">
    <value>Current position: </value>
  </data>
  <data name="LastClickLabel" xml:space="preserve">
    <value>Last click: </value>
  </data>
  <data name="Form2" xml:space="preserve">
    <value>Automatic Clicker</value>
  </data>
  <data name="tabPage1" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="tabPage2" xml:space="preserve">
    <value>Create Мacro</value>
  </data>
  <data name="tabPage3" xml:space="preserve">
    <value>Use</value>
  </data>
  <data name="tabPage4" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="txtX" xml:space="preserve">
    <value>X coordinate</value>
  </data>
  <data name="txtY" xml:space="preserve">
    <value>Y coordinate</value>
  </data>
  <data name="cmbActionType" xml:space="preserve">
    <value>Single click,
Double click,
Scrollin,
Right-click</value>
  </data>
  <data name="chkReturnMouseToOriginal" xml:space="preserve">
    <value>Return to the original position</value>
  </data>
  <data name="FrequencyInputSliderLabel" xml:space="preserve">
    <value>Frequency (seconds)</value>
  </data>
  <data name="DurationInputSliderLabel" xml:space="preserve">
    <value>Duration (minutes)</value>
  </data>
  <data name="CountInputSliderLabel" xml:space="preserve">
    <value>Repetitions</value>
  </data>
  <data name="countAllMacroRepeatSliderLabel" xml:space="preserve">
    <value>Repetitions</value>
  </data>
  <data name="textBoxMacroNameHint" xml:space="preserve">
    <value>Enter a name for the macro</value>
  </data>
  <data name="textBoxMacroNameText" xml:space="preserve">
    <value>Macro 1</value>
  </data>
  <data name="textBoxActionNameHint" xml:space="preserve">
    <value>Enter a name for the action</value>
  </data>
  <data name="textBoxActionNameText" xml:space="preserve">
    <value>Action 1</value>
  </data>
  <data name="numericDelayBeforeSliderLabel" xml:space="preserve">
    <value>Delay before (ms)</value>
  </data>
  <data name="numericDelaySliderLabel" xml:space="preserve">
    <value>Delay after (ms)</value>
  </data>
  <data name="btnAddAction" xml:space="preserve">
    <value>Add as new action</value>
  </data>
  <data name="btnCreateMacro" xml:space="preserve">
    <value>Create a new macro</value>
  </data>
  <data name="btnMacroSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="btnMacroDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="btnNewSavePath" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="textBoxDisplayMacroInfo" xml:space="preserve">
    <value>Macro information . . .</value>
  </data>
  <data name="chkAllMacrosToExecute" xml:space="preserve">
    <value>Execute all</value>
  </data>
  <data name="btnExecuteMacro" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="btnStopMacro" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="richTextBoxLogInfo" xml:space="preserve">
    <value>History  .  .  .</value>
  </data>
  <data name="groupBoxTheme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="materialLabelTheme" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="btnSwitchTheme" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="groupBoxCollors" xml:space="preserve">
    <value>Color variations</value>
  </data>
  <data name="RadioButtonOrange" xml:space="preserve">
    <value>Orange</value>
  </data>
  <data name="RadioButtonGreen" xml:space="preserve">
    <value>Green</value>
  </data>
  <data name="RadioButtonBlue" xml:space="preserve">
    <value>Blue</value>
  </data>
  <data name="RadioButtonBase" xml:space="preserve">
    <value>Base</value>
  </data>
  <data name="groupBoxLanguages" xml:space="preserve">
    <value>Language packs</value>
  </data>
  <data name="RadioButtonLanguageBG" xml:space="preserve">
    <value>Bulgarian</value>
  </data>
  <data name="RadioButtonLanguageEN" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="RadioButtonLanguageDE" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="RadioButtonLanguageFR" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="groupBoxAllert" xml:space="preserve">
    <value>Modal windows</value>
  </data>
  <data name="materialLabelAllert" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="BtnSwitchModalAlert" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="CheckboxError" xml:space="preserve">
    <value>Errors</value>
  </data>
  <data name="CheckboxSuccess" xml:space="preserve">
    <value>Successes</value>
  </data>
  <data name="CheckboxInfo" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="START_BUTTON_OK" xml:space="preserve">
    <value>Tracking coordinates in progress  .  .  .</value>
  </data>
  <data name="STOP_BUTTON_NO_RECORD" xml:space="preserve">
    <value>No coordinates recorded.</value>
  </data>
  <data name="STOP_BUTTON_OK_RECORD" xml:space="preserve">
    <value>Loaded coordinates for action.</value>
  </data>
  <data name="ON_GLOBAL_MOUSE_CLICK" xml:space="preserve">
    <value>New coordinates detected.</value>
  </data>
  <data name="BTN_ADD_ACTION_NO_RECORD" xml:space="preserve">
    <value>No coordinates recorded in the fields.</value>
  </data>
  <data name="BTN_ADD_ACTION_OK" xml:space="preserve">
    <value>Successfully added to the action list.</value>
  </data>
  <data name="BTN_CREATE_MACRO_OK" xml:space="preserve">
    <value>Successfully added to the available macros.</value>
  </data>
  <data name="LST_AVEILABLE_MACROS_FULL" xml:space="preserve">
    <value>The macro list is full.</value>
  </data>
  <data name="BTN_EXECUTE_MACRO_START" xml:space="preserve">
    <value>Automatic clicking in progress  .  .  .</value>
  </data>
  <data name="BTN_EXECUTE_MACRO_MISSING_MACRO" xml:space="preserve">
    <value>No such macro to execute.</value>
  </data>
  <data name="BTN_EXECUTE_MACRO_FINISH" xml:space="preserve">
    <value>Automatic clicking has ended.</value>
  </data>
  <data name="BTN_STOP_MACRO" xml:space="preserve">
    <value>The automatic clicking was stopped.</value>
  </data>
  <data name="BTN_ACTION_DELETE_OK_REMOVE" xml:space="preserve">
    <value>Action removed from the add list.</value>
  </data>
  <data name="BTN_MACRO_FOR_EXECUTE_DELETE_OK_REMOVE" xml:space="preserve">
    <value>Macro removed from the execution list.</value>
  </data>
  <data name="CHK_ALL_MACROS_TO_EXECUTE_ALL" xml:space="preserve">
    <value>All macros in the list are for execution.</value>
  </data>
  <data name="CHK_ALL_MACROS_TO_EXECUTE_SINGLE" xml:space="preserve">
    <value>Only the selected macro will be executed.</value>
  </data>
  <data name="IS_NAME_INVALID" xml:space="preserve">
    <value>Invalid name.</value>
  </data>
  <data name="IS_LIST_EMPTY" xml:space="preserve">
    <value>No items in the list.</value>
  </data>
  <data name="IS_NOTING_SELECTED_IN_LIST" xml:space="preserve">
    <value>No item selected from the list.</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="INITIALIZE_BUTTONS_BEHAVIOR_ERROR" xml:space="preserve">
    <value>Error adding behavior to the buttons.</value>
  </data>
  <data name="LOAD_SAVED_MACROS_BASE_DIRECTORY" xml:space="preserve">
    <value>Base directory of the application</value>
  </data>
  <data name="LOAD_SAVED_MACROS_PATH_TO_SAVE" xml:space="preserve">
    <value>Path to the file with records</value>
  </data>
  <data name="LOAD_SAVED_MACROS_LOADING" xml:space="preserve">
    <value>Loading macros  .  .  .</value>
  </data>
  <data name="LOAD_SAVED_MACROS_LOADED" xml:space="preserve">
    <value>The macros are loaded.</value>
  </data>
  <data name="LOAD_SAVED_MACROS_LIST_EMPTY" xml:space="preserve">
    <value>The list is empty and no macros are saved.</value>
  </data>
  <data name="BTN_MACRO_SAVE_TO_DB_NO_SELECTED" xml:space="preserve">
    <value>No macro selected.</value>
  </data>
  <data name="BTN_MACRO_SAVE_TO_DB_ERROR_DIR_OR_FILE" xml:space="preserve">
    <value>Problem with the directory or file for saving.</value>
  </data>
  <data name="BTN_MACRO_SAVE_TO_DB_OK" xml:space="preserve">
    <value>Successful save to the archive.</value>
  </data>
  <data name="BTN_MACRO_SAVE_TO_DB_M_EXISTS_OR_ERROR" xml:space="preserve">
    <value>There is such a macro in the archive or an error occurred during the save.</value>
  </data>
  <data name="BTN_MACRO_DELETE_FROM_DB_NO_SELECTED" xml:space="preserve">
    <value>No macro selected.</value>
  </data>
  <data name="BTN_MACRO_DELETE_FROM_DB_ERROR_DIR_OR_FILE" xml:space="preserve">
    <value>Problem with the directory or file for saving.</value>
  </data>
  <data name="BTN_MACRO_DELETE_FROM_DB_ERROR_REQUEST" xml:space="preserve">
    <value>Unsuccessful request</value>
  </data>
  <data name="BTN_MACRO_DELETE_FROM_DB_OK" xml:space="preserve">
    <value>Successful delete.</value>
  </data>
  <data name="CREATE_MACRO_NAME_EXIST" xml:space="preserve">
    <value>A macro with this name already exists.</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_REPETITIONS" xml:space="preserve">
    <value>Repetitions</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_DURATION" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_EXPECTED_DURATION" xml:space="preserve">
    <value>Expected duration</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_REPETITION" xml:space="preserve">
    <value>Global repetition</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_STARTED" xml:space="preserve">
    <value>Macro started</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_MACRO_REPETITION" xml:space="preserve">
    <value>Macro repetition</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_ACTION_STARTED" xml:space="preserve">
    <value>Action started</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_ACTION_REPETITION" xml:space="preserve">
    <value>Action repetition</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_REMAIN_TIME" xml:space="preserve">
    <value>Remaining time</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_END_AFTER" xml:space="preserve">
    <value>End after</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_ACTION_PROGRESS" xml:space="preserve">
    <value>Action progress</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_MACRO_PROGRESS" xml:space="preserve">
    <value>Macro progress</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_MACRO_COMPLETED" xml:space="preserve">
    <value>The macro is completed.</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_MACRO_INTERRUPTED" xml:space="preserve">
    <value>The macro was interrupted.</value>
  </data>
  <data name="SET_SAVE_DIRECTORY" xml:space="preserve">
    <value>Select a directory to save macros.</value>
  </data>
  <data name="ADD_NEW_BUTTON_ERROR" xml:space="preserve">
    <value>The key already exists in the collection. The action is skipped.</value>
  </data>
  <data name="CLICK_BUTTON_MECHANICS_EXECUTE_ERROR" xml:space="preserve">
    <value>The provided key does not exist in the collection.</value>
  </data>
  <data name="CHECK_FOR_NULL" xml:space="preserve">
    <value>The sender cannot be empty</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_CORDINATES" xml:space="preserve">
    <value>Coordinates</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_ACTION" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_BEFORE" xml:space="preserve">
    <value>Delay before</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_AFTER" xml:space="preserve">
    <value>Delay after</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_FREQUENCY" xml:space="preserve">
    <value>Frequency</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_ORIGINAL_POSITION" xml:space="preserve">
    <value>Original position</value>
  </data>
  <data name="DISPLAY_MACRO_INFO" xml:space="preserve">
    <value>Saved in the archive.</value>
  </data>
</root>