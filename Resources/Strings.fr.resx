<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnStartRecording" xml:space="preserve">
    <value>Démarrer l'enregistrement</value>
  </data>
  <data name="btnStopRecording" xml:space="preserve">
    <value>Arrêter l'enregistrement</value>
  </data>
  <data name="CurrentPositionLabel" xml:space="preserve">
    <value>Position actuelle: </value>
  </data>
  <data name="LastClickLabel" xml:space="preserve">
    <value>Dernier clic: </value>
  </data>
  <data name="Form2" xml:space="preserve">
    <value>Cliqueur Automatique</value>
  </data>
  <data name="tabPage1" xml:space="preserve">
    <value>Connexion</value>
  </data>
  <data name="tabPage2" xml:space="preserve">
    <value>Créer une Мacro</value>
  </data>
  <data name="tabPage3" xml:space="preserve">
    <value>Utiliser</value>
  </data>
  <data name="tabPage4" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="txtX" xml:space="preserve">
    <value>Coordonnée X</value>
  </data>
  <data name="txtY" xml:space="preserve">
    <value>Coordonnée Y</value>
  </data>
  <data name="cmbActionType" xml:space="preserve">
    <value>Clic simple,
Clic double,
Défilement,
Clic droit</value>
  </data>
  <data name="chkReturnMouseToOriginal" xml:space="preserve">
    <value>Retour à la position d'origine</value>
  </data>
  <data name="FrequencyInputSliderLabel" xml:space="preserve">
    <value>Fréquence (secondes)</value>
  </data>
  <data name="DurationInputSliderLabel" xml:space="preserve">
    <value>Durée (minutes)</value>
  </data>
  <data name="CountInputSliderLabel" xml:space="preserve">
    <value>Répétitions</value>
  </data>
  <data name="countAllMacroRepeatSliderLabel" xml:space="preserve">
    <value>Répétitions</value>
  </data>
  <data name="textBoxMacroNameHint" xml:space="preserve">
    <value>Entrez un nom pour le macro</value>
  </data>
  <data name="textBoxMacroNameText" xml:space="preserve">
    <value>Macro 1</value>
  </data>
  <data name="textBoxActionNameHint" xml:space="preserve">
    <value>Entrez un nom pour l'action</value>
  </data>
  <data name="textBoxActionNameText" xml:space="preserve">
    <value>Action 1</value>
  </data>
  <data name="numericDelayBeforeSliderLabel" xml:space="preserve">
    <value>Délai avant (ms)</value>
  </data>
  <data name="numericDelaySliderLabel" xml:space="preserve">
    <value>Délai après (ms)</value>
  </data>
  <data name="btnAddAction" xml:space="preserve">
    <value>Ajouter en tant que nouvelle action</value>
  </data>
  <data name="btnCreateMacro" xml:space="preserve">
    <value>Créer un nouveau macro</value>
  </data>
  <data name="btnMacroSave" xml:space="preserve">
    <value>Sauvegarder</value>
  </data>
  <data name="btnMacroDelete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="btnNewSavePath" xml:space="preserve">
    <value>Emplacement</value>
  </data>
  <data name="textBoxDisplayMacroInfo" xml:space="preserve">
    <value>Informations sur le macro . . .</value>
  </data>
  <data name="chkAllMacrosToExecute" xml:space="preserve">
    <value>Exécuter tout</value>
  </data>
  <data name="btnExecuteMacro" xml:space="preserve">
    <value>Exécuter</value>
  </data>
  <data name="btnStopMacro" xml:space="preserve">
    <value>Arrêter</value>
  </data>
  <data name="richTextBoxLogInfo" xml:space="preserve">
    <value>Historique  .  .  .</value>
  </data>
  <data name="groupBoxTheme" xml:space="preserve">
    <value>Thème</value>
  </data>
  <data name="materialLabelTheme" xml:space="preserve">
    <value>Sombre</value>
  </data>
  <data name="btnSwitchTheme" xml:space="preserve">
    <value>Claire</value>
  </data>
  <data name="groupBoxCollors" xml:space="preserve">
    <value>Variations de couleurs</value>
  </data>
  <data name="RadioButtonOrange" xml:space="preserve">
    <value>Orange</value>
  </data>
  <data name="RadioButtonGreen" xml:space="preserve">
    <value>Vert</value>
  </data>
  <data name="RadioButtonBlue" xml:space="preserve">
    <value>Bleu</value>
  </data>
  <data name="RadioButtonBase" xml:space="preserve">
    <value>De base</value>
  </data>
  <data name="groupBoxLanguages" xml:space="preserve">
    <value>Packs de langue</value>
  </data>
  <data name="RadioButtonLanguageBG" xml:space="preserve">
    <value>Bulgare</value>
  </data>
  <data name="RadioButtonLanguageEN" xml:space="preserve">
    <value>Anglais</value>
  </data>
  <data name="RadioButtonLanguageDE" xml:space="preserve">
    <value>Allemand</value>
  </data>
  <data name="RadioButtonLanguageFR" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="groupBoxAllert" xml:space="preserve">
    <value>Fenêtres modales</value>
  </data>
  <data name="materialLabelAllert" xml:space="preserve">
    <value>Arrêter</value>
  </data>
  <data name="BtnSwitchModalAlert" xml:space="preserve">
    <value>Lancé</value>
  </data>
  <data name="CheckboxError" xml:space="preserve">
    <value>Erreurs</value>
  </data>
  <data name="CheckboxSuccess" xml:space="preserve">
    <value>Succès</value>
  </data>
  <data name="CheckboxInfo" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="START_BUTTON_OK" xml:space="preserve">
    <value>Suivi des coordonnées en cours  .  .  .</value>
  </data>
  <data name="STOP_BUTTON_NO_RECORD" xml:space="preserve">
    <value>Aucune coordonnée enregistrée.</value>
  </data>
  <data name="STOP_BUTTON_OK_RECORD" xml:space="preserve">
    <value>Coordonnées chargées pour l'action.</value>
  </data>
  <data name="ON_GLOBAL_MOUSE_CLICK" xml:space="preserve">
    <value>Nouvelles coordonnées détectées.</value>
  </data>
  <data name="BTN_ADD_ACTION_NO_RECORD" xml:space="preserve">
    <value>Aucune coordonnée enregistrée dans les champs.</value>
  </data>
  <data name="BTN_ADD_ACTION_OK" xml:space="preserve">
    <value>Ajouté avec succès à la liste des actions.</value>
  </data>
  <data name="BTN_CREATE_MACRO_OK" xml:space="preserve">
    <value>Ajouté avec succès aux macros disponibles.</value>
  </data>
  <data name="LST_AVEILABLE_MACROS_FULL" xml:space="preserve">
    <value>La liste des macros est pleine.</value>
  </data>
  <data name="BTN_EXECUTE_MACRO_START" xml:space="preserve">
    <value>Clic automatique en cours  .  .  .</value>
  </data>
  <data name="BTN_EXECUTE_MACRO_MISSING_MACRO" xml:space="preserve">
    <value>Aucun macro à exécuter.</value>
  </data>
  <data name="BTN_EXECUTE_MACRO_FINISH" xml:space="preserve">
    <value>Le clic automatique est terminé.</value>
  </data>
  <data name="BTN_STOP_MACRO" xml:space="preserve">
    <value>Le clic automatique a été arrêté.</value>
  </data>
  <data name="BTN_ACTION_DELETE_OK_REMOVE" xml:space="preserve">
    <value>Action supprimée de la liste d'ajout.</value>
  </data>
  <data name="BTN_MACRO_FOR_EXECUTE_DELETE_OK_REMOVE" xml:space="preserve">
    <value>Macro supprimé de la liste d'exécution.</value>
  </data>
  <data name="CHK_ALL_MACROS_TO_EXECUTE_ALL" xml:space="preserve">
    <value>Tous les macros de la liste sont à exécuter.</value>
  </data>
  <data name="CHK_ALL_MACROS_TO_EXECUTE_SINGLE" xml:space="preserve">
    <value>Seul le macro sélectionné sera exécuté.</value>
  </data>
  <data name="IS_NAME_INVALID" xml:space="preserve">
    <value>Nom invalide.</value>
  </data>
  <data name="IS_LIST_EMPTY" xml:space="preserve">
    <value>Aucun élément dans la liste.</value>
  </data>
  <data name="IS_NOTING_SELECTED_IN_LIST" xml:space="preserve">
    <value>Aucun élément sélectionné dans la liste</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Succès</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="INITIALIZE_BUTTONS_BEHAVIOR_ERROR" xml:space="preserve">
    <value>Erreur lors de l'ajout du comportement aux boutons.</value>
  </data>
  <data name="LOAD_SAVED_MACROS_BASE_DIRECTORY" xml:space="preserve">
    <value>Répertoire de base de l'application</value>
  </data>
  <data name="LOAD_SAVED_MACROS_PATH_TO_SAVE" xml:space="preserve">
    <value>Chemin vers le fichier avec les enregistrements</value>
  </data>
  <data name="LOAD_SAVED_MACROS_LOADING" xml:space="preserve">
    <value>Chargement des macros  .  .  .</value>
  </data>
  <data name="LOAD_SAVED_MACROS_LOADED" xml:space="preserve">
    <value>Les macros sont chargées.</value>
  </data>
  <data name="LOAD_SAVED_MACROS_LIST_EMPTY" xml:space="preserve">
    <value>La liste est vide et aucun macro n'est enregistré.</value>
  </data>
  <data name="BTN_MACRO_SAVE_TO_DB_NO_SELECTED" xml:space="preserve">
    <value>Aucun macro sélectionné.</value>
  </data>
  <data name="BTN_MACRO_SAVE_TO_DB_ERROR_DIR_OR_FILE" xml:space="preserve">
    <value>Problème avec le répertoire ou le fichier de sauvegarde.</value>
  </data>
  <data name="BTN_MACRO_SAVE_TO_DB_OK" xml:space="preserve">
    <value>Enregistrement réussi dans l'archive.</value>
  </data>
  <data name="BTN_MACRO_SAVE_TO_DB_M_EXISTS_OR_ERROR" xml:space="preserve">
    <value>Il existe un tel macro dans l'archive ou une erreur s'est produite lors de l'enregistrement.</value>
  </data>
  <data name="BTN_MACRO_DELETE_FROM_DB_NO_SELECTED" xml:space="preserve">
    <value>Aucun macro sélectionné.</value>
  </data>
  <data name="BTN_MACRO_DELETE_FROM_DB_ERROR_DIR_OR_FILE" xml:space="preserve">
    <value>Problème avec le répertoire ou le fichier de sauvegarde.</value>
  </data>
  <data name="BTN_MACRO_DELETE_FROM_DB_ERROR_REQUEST" xml:space="preserve">
    <value>Demande échouée.</value>
  </data>
  <data name="BTN_MACRO_DELETE_FROM_DB_OK" xml:space="preserve">
    <value>Suppression réussie.</value>
  </data>
  <data name="CREATE_MACRO_NAME_EXIST" xml:space="preserve">
    <value>Un macro avec ce nom existe déjà.</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_REPETITIONS" xml:space="preserve">
    <value>Répétitions</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_DURATION" xml:space="preserve">
    <value>Durée</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_EXPECTED_DURATION" xml:space="preserve">
    <value>Durée attendue</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_REPETITION" xml:space="preserve">
    <value>Répétition globale</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_STARTED" xml:space="preserve">
    <value>Macro démarré</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_MACRO_REPETITION" xml:space="preserve">
    <value>Répétition de macro</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_ACTION_STARTED" xml:space="preserve">
    <value>Action démarrée</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_ACTION_REPETITION" xml:space="preserve">
    <value>Répétition d'action</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_REMAIN_TIME" xml:space="preserve">
    <value>Temps restant</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_END_AFTER" xml:space="preserve">
    <value>Fin après</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_ACTION_PROGRESS" xml:space="preserve">
    <value>Progression de l'action</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_MACRO_PROGRESS" xml:space="preserve">
    <value>Progression des macros</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_MACRO_COMPLETED" xml:space="preserve">
    <value>Le macro est terminé.</value>
  </data>
  <data name="EXECUTE_MACRO_ASYNC_MACRO_INTERRUPTED" xml:space="preserve">
    <value>Le macro a été interrompu.</value>
  </data>
  <data name="SET_SAVE_DIRECTORY" xml:space="preserve">
    <value>Sélectionnez un répertoire pour enregistrer les macros.</value>
  </data>
  <data name="ADD_NEW_BUTTON_ERROR" xml:space="preserve">
    <value>La clé existe déjà dans la collection. L'action est ignorée.</value>
  </data>
  <data name="CLICK_BUTTON_MECHANICS_EXECUTE_ERROR" xml:space="preserve">
    <value>La clé fournie n'existe pas dans la collection.</value>
  </data>
  <data name="CHECK_FOR_NULL" xml:space="preserve">
    <value>L'expéditeur ne peut pas être vide.</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_CORDINATES" xml:space="preserve">
    <value>Coordonnées</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_ACTION" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_BEFORE" xml:space="preserve">
    <value>Délai avant</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_AFTER" xml:space="preserve">
    <value>Délai après</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_FREQUENCY" xml:space="preserve">
    <value>Fréquence</value>
  </data>
  <data name="DISPLAY_ACTION_INFO_ORIGINAL_POSITION" xml:space="preserve">
    <value>Position d'origine</value>
  </data>
  <data name="DISPLAY_MACRO_INFO" xml:space="preserve">
    <value>Sauvegardé dans l'archive.</value>
  </data>
</root>